[user]
	email = elvis@warp.dev
	name = elvis kahoro
[core]
	excludesfile = /Users/elvis/.gitignore_global
	editor = vim
[push]
  	default = simple
	autoSetupRemote = true
[color]
	status = auto
	diff = auto
	branch = auto
	interactive = auto
	grep = auto
	ui = auto
[alias]
	a = "!gt add"
	aa = "!gt add --all"
	ap = "!gt add --patch"
	au = "!gt add -u"
    bb = "!gt branch bottom"
	bc = "!gt branch create"
	bcn = "!gt branch create --no-verify"
    bd = "!gt branch down"
	bl = branch
    brn = "!gt branch rename"
    bt = "!gt branch top"
    bu = "!gt branch up"
	branch = "!gt branch"
	ch = checkout
	ca = "!gt commit amend"
	can = "!gt commit amend --no-verify"
	com = "!gt commit -m"
	co = "!gt commit create"
	con = "!gt commit create --no-verify"
	gcon = commit --no-verify
	gco = commit
	cp = "!gt cherry-pick"
	cpa = "!gt cherry-pick --abort"
	cpc = "!gt cherry-pick --continue"
	d = "!f() { if [ $# -eq 0 ]; then git diff; else git diff HEAD~$1; fi }; f"
	dt = "!f() { if [ $# -eq 0 ]; then git diff-tree --no-commit-id --name-status -r HEAD; else git diff-tree --no-commit-id --name-status -r HEAD~$1; fi }; f"
	dl = "!f() { if [ $# -eq 0 ]; then git show --name-only; else git log --name-only -$1; fi }; f"
	ds = "!gt diff --staged"
	l = "!gt log"
	ll = "!gt log long"
	ls = "!gt log short"
	lt = log --oneline
	m = checkout main
	open = "!gt dash pr"
    onto = "!gt upstack onto"
	prev = "!f() { if [ $# -eq 0 ]; then git checkout HEAD^1; else git checkout HEAD^$1; fi }; f"
	pbd = "!git push origin --delete $(git branch --show-current)"
	pbf = "!gt push -u origin HEAD"
	pbdf = "!git push origin --delete $(git branch --show-current) && git push -u origin HEAD"
	pl = "!gt pull"
	plm = "!gt fetch origin main:main"
	pf = "!gt push"
	pr = "!gt downstack submit"
	# pr = "!gh pr create --web"
	r = "!f() { if [ $# -eq 0 ]; then echo 'Specify a number'; else git reset HEAD~$1 --mixed; fi }; f"
	rb = "!gt rebase"
	rba = "!gt rebase --abort"
	rbm = "!gt rebase main"
	rbc = "!gt continue"
    rs = "!gt repo sync"
	s = "!gt status"
    ss = "!gt downstack submit"
	sw = "!gt switch"
	swc = "!gt switch -c"
	sh = "!f() { if [ $# -eq 0 ]; then git show; else git show HEAD~$1; fi }; f"
	sq = "!f() { if [ $# -gt 2 ]; then echo "must be more than one"; else git rebase -i HEAD~$1; fi }; f"
	st = "!gt stash --patch"
	sta = "!gt stash"
	stau = "!gt stash --include-untracked"
	std = "!gt stash drop"
	stl = "!gt stash list"
	stp = "!gt stash pop"
	sts = "!gt stash show"
	x = checkout -
	si = "!gt submodule init"
	su = "!gt submodule update"
	sur = "!gt submodule update --init --recursive"
	smain = submodule foreach --recursive "git checkout main"
	spull =  submodule foreach --recursive "git pull"
   	spush = "!f() { if [ $# -eq 0 ]; then git submodule foreach --recursive "git add ."; git submodule foreach --recursive "git commit -m c"; git push --recurse-submodules=on-demand; else git submodule foreach --recursive "git add ."; git submodule foreach --recursive "git commit -m $1"; git push --recurse-submodules=on-demand; fi } f"
	sstash = submodule foreach --recursive "git stash"
    test = "!pre-commit run --all-files"

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[http]
	cookiefile = ~/.config/.gitcookies
[commit]
	template = ~/.config/git/.gitmessage
[pull]
	rebase = true
[fetch]
	prune = true
[diff]
    tool = difftastic
[difftool]
        prompt = false
[difftool "difftastic"]
        cmd = difft "$LOCAL" "$REMOTE"
[init]
	defaultBranch = main
[credential "https://github.com"]
	helper = !/home/linuxbrew/.linuxbrew/Cellar/gh/2.3.0/bin/gh auth git-credential
[credential "https://source.developers.google.com"]
	helper = gcloud.sh
